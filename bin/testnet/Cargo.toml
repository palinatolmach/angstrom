[package]
name = "testnet"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
exclude.workspace = true

[package.metadata.cargo-udeps.ignore]
normal = [
  # Used for diagrams in docs
  "aquamarine",
]

[dependencies]
# Alloy
alloy.workspace = true
alloy-chains.workspace = true

# Reth
reth.workspace = true
reth-node-builder.workspace = true
reth-network-api.workspace = true
reth-network-peers.workspace = true
reth-codecs.workspace = true
reth-tasks.workspace = true
# reth-rpc-types.workspace = true
alloy-rpc-types.workspace = true
reth-eth-wire.workspace = true
reth-node-ethereum.workspace = true
reth-revm.workspace = true
reth-blockchain-tree.workspace = true
reth-beacon-consensus.workspace = true
reth-tokio-util.workspace = true
reth-ecies.workspace = true
reth-discv4 = { workspace = true, features = [
  "test-utils",
] }
reth-dns-discovery = { git = "https://github.com/paradigmxyz/reth", version = "1.1.0", tag = "v1.1.0" }
reth-primitives = { workspace = true, features = ["test-utils"] }
reth-network = { workspace = true, features = ["test-utils"] }
reth-metrics.workspace = true
reth-provider = { workspace = true, features = ["test-utils"] }
reth-tracing.workspace = true
reth-transaction-pool = { workspace = true, features = ["test-utils"] }
reth-db.workspace = true

# Angstrom
consensus.workspace = true
angstrom-types = { workspace = true, features = ["testnet"] }
angstrom-utils.workspace = true
angstrom-network.workspace = true
angstrom-eth.workspace = true
angstrom-rpc.workspace = true
angstrom.workspace = true
order-pool.workspace = true
validation.workspace = true

# Other
futures.workspace = true
jsonrpsee.workspace = true
tokio-util.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
tokio.workspace = true
tokio-stream.workspace = true
enr = { workspace = true, features = ["serde", "rust-secp256k1"] }
rand.workspace = true
secp256k1.workspace = true
serial_test.workspace = true
tempfile.workspace = true
parking_lot.workspace = true
clap = { version = "4.5.4", features = ["derive"] }
eyre = "0.6.12"

[target.'cfg(unix)'.dependencies]
tikv-jemallocator = { version = "0.6.0", optional = true }


[features]
default = ["jemalloc"]
jemalloc = ["dep:tikv-jemallocator"]
jemalloc-prof = ["jemalloc", "tikv-jemallocator?/profiling"]


[[bin]]
name = "testnet"
path = "src/main.rs"
